openapi: 3.0.2
info:
  title: 'VK Test API'
  version: 'v1'
  description: |
    Запросы к API начинаются с `/api/v1/`
    # Описание
    Этот проект позволяет каждому пользователю создать новость. Все пользователи могут получать
    списки всех новостей с пагинацией. Пользователи могут удалять и изменять свои
    новости. Админ может удалять и изменять любую новость.
    # Алгоритм регистрации пользователей
    1. Пользователь отправляет POST-запрос на добавление нового пользователя с параметрами `username` и `password` на эндпоинт `auth/users/`.
    2. API возвращает данные зарегистрированного пользователя
    3. Пользователь отправляет POST-запрос с параметрами `username` и `password` на эндпоинт `auth/jwt/create/`, в ответе на запрос ему приходят `refresh` и `access` токены.
tags:
  - name: AUTH
    description: Регистрация пользователей и выдача токенов
  - name: NEWS
    description: |
      Просмотреть информацию о доступных новостях. Добавление новых новостей доступно только авторизованным пользователям.
  - name: COMMENT
    description: |
      Просмотреть комментарии к новости. Добавление новых комментариев доступно только авторизованным пользователям.
  - name: LIKE
    description: |
      Поставить или удалить лайк. Доступно только авторизованным пользователям.
paths:
  /api/auth/users/:
    post:
      operationId: Регистрация
      description: Регистрирует пользователя с переданными `username` и `password`
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: 'Пользователь создан'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: 'Отсутствует обязательное поле или оно некорректно'
      tags:
        - AUTH
  /api/auth/jwt/create/:
    post:
      operationId: Получение токена
      description: Возвращает access и refresh токен, если переданные данные корректные
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: 'Токен создан'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: 'Отсутствует обязательное поле или оно некорректно'
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
            description: 'Переданы некорректные данные'
      tags:
        - AUTH
  /api/auth/jwt/refresh/:
    post:
      operationId: Обновить access токен
      description: Обновляет access токен, если переданный refresh токен корректный
      parameters: [ ]
      requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              refresh:
                type: string
            required:
              - refresh
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: 'Токен обновлен'
          '401':
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    detail:
                      type: string
                    code:
                      type: string
            description: 'Некорректный refresh токен'
      tags:
        - AUTH

  /api/v1/news/:
    get:
      operationId: Список книг
      description: "Просмотр списка книг с указанием авторов"
      parameters: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                    description: 'Общее количество объектов в базе'
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://127.0.0.1:8000/api/news/?page=4
                    description: 'Ссылка на следующую страницу'
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://127.0.0.1:8000/api/news/?page=2
                    description: 'Ссылка на предыдущую страницу'
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/News'
                    description: 'Список объектов текущей страницы'
          description: Отображение списка книг
      tags:
        - NEWS
    post:
      operationId: Добавить новость
      description: |
        Добавление новости доступно только авторизованным пользователям.
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewsWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewsWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewsWrite'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
          description: 'Новость успешно добавлена'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: 'Ошибка валидации'
        '401':
          сontent:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: 'Отсутствует токен'
      tags:
        - NEWS
  /api/news/<int:id>/:
    get:
      operationId: Получение конкретной новости
      description: Просмотреть конкретную новость по ее id
      parameters: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
          description: Новость найдена
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: 'Новость с таким id нет'
      tags:
        - NEWS
    put:
      operationId: Полное редактирование новости
      description: |
        Редактирование новости доступно только авторам
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewsWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewsWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewsWrite'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
          description: 'Новость успешна обновлена'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: 'Отсутствует обязательное поле или оно некорректно'
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: 'Отсутствует токен'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionDenied'
            description: 'Недостаточно прав'
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
              description: 'Новость с таким id не найдена'
      tags:
        - NEWS
    patch:
      operationId: Частичное редактирование новости
      description: |
        Редактирование книги доступно только автору или админу
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewsWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewsWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewsWrite'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/News'
          description: 'Новость успешна обновлена'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: 'Отсутствует обязательное поле или оно некорректно'
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: 'Отсутствует токен'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionDenied'
          description: 'Недостаточно прав'
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
            description: 'Книга с таким id не найдена'
      tags:
        - NEWS
    delete:
      operationId: Удалить нововсть
      description: Удаление новости доступно только автору или админу
      parameters: [ ]
      responses:
        '204':
          description: 'Новость удалена'
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: 'Отсутствует токен'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionDenied'
          description: 'Недостаточно прав'
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: 'Книга с таким id не найдена'
      tags:
        - NEWS
  /api/v1/news/<int:news_id>/comments/:
    get:
      operationId: Список комментариев к новости
      description: "Просмотр комментариев определенной новости"
      parameters: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                    description: 'Общее количество объектов в базе'
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://127.0.0.1:8000/api/news/<int:news_id>/comments/?page=4
                    description: 'Ссылка на следующую страницу'
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://127.0.0.1:8000/api/news/<int:news_id>/comments/?page=2
                    description: 'Ссылка на предыдущую страницу'
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'
                    description: 'Список объектов текущей страницы'
          description: Отображение списка комментариев
      tags:
        - COMMENT
    post:
      operationId: Добавить rомментарий
      description: |
        Добавление комментария доступно только авторизованным пользователям.
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CommentWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CommentWrite'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: 'Комментарий успешно добавлен'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: 'Ошибка валидации'
        '401':
          сontent:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: 'Отсутствует токен'
      tags:
        - COMMENT
  /api/news/<int:news_id>/comments/<int:comment_id>/:
    get:
      operationId: Получение конкретного комментария конкретной новости
      description: Просмотреть комментарий конкретной новости по их news_id и comment_id
      parameters: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: Комментарии найдена
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: 'Комментарий с таким id нет'
      tags:
        - COMMENT
    put:
      operationId: Полное редактирование комментария
      description: |
        Редактирование комментария доступно только авторам
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CommentWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CommentWrite'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: 'Комментарий успешно обновлен'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: 'Отсутствует обязательное поле или оно некорректно'
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: 'Отсутствует токен'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionDenied'
            description: 'Недостаточно прав'
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
              description: 'Комментарий с таким id не найдена'
      tags:
        - COMMENT
    patch:
      operationId: Частичное редактирование комментария
      description: |
        Редактирование комментария доступно только автору или админу
      parameters: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentWrite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CommentWrite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CommentWrite'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: 'Комментарий успешно обновлен'
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: 'Отсутствует обязательное поле или оно некорректно'
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: 'Отсутствует токен'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionDenied'
          description: 'Недостаточно прав'
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
            description: 'Комментарий с таким id не найден'
      tags:
        - COMMENT
    delete:
      operationId: Удалить комментарий
      description: Удаление комментарий доступно только автору или админу
      parameters: [ ]
      responses:
        '204':
          description: 'Комментарий удален'
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: 'Отсутствует токен'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionDenied'
          description: 'Недостаточно прав'
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: 'Комментарий с таким id не найден'
      tags:
        - COMMENT
  /api/v1/news/<int:news_id>/likes/:
    post:
      operationId: Поставить лайк
      description: |
        Добавление лайка доступно только авторизованным пользователям.
      parameters: []
      requestBody: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: 'Лайк успешно добавлен'
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: 'Ошибка добавления комментария'
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: 'Отсутствует токен'
      tags:
        - LIKE
    delete:
      operationId: Удалить лайк
      description: Удаление лайка доступно только автору
      parameters: [ ]
      responses:
        '204':
          description: 'Лайк удален'
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: 'Ошибка удаления лайка'
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: 'Отсутствует токен'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionDenied'
          description: 'Недостаточно прав'
      tags:
        - LIKE


components:
  schemas:
    Author:
      type: object
      properties:
        id:
          type: integer
          description: Id пользователя
        username:
          type: string
          description: Ник пользователя
    News:
      title: Объект новости
      type: object
      properties:
        id:
          type: integer
          description: Id новости
        header:
          type: string
          description: Заголовок новости
        text:
          type: string
          description: Текст новости
        published_at:
          type: integer
          description: Дата и время публикации
        author:
            $ref: '#/components/schemas/Author'
    NewsWrite:
      title: Добавление новости
      type: object
      properties:
        header:
          type: string
          description: Заголовок новости
        text:
          type: string
          description: Текст новости
    Comment:
      title: Объект комментария
      type: object
      properties:
        id:
          type: integer
          description: Id комментария
        text:
          type: string
          description: Текст комментария
        published_at:
          type: integer
          description: Дата и время публикации
        author:
          $ref: '#/components/schemas/Author'
    CommentWrite:
      title: Добавление комментария
      type: object
      properties:
        text:
          type: string
          description: Текст комментария
    ValidationError:
      title: Ошибка валидации
      type: object
      properties:
        field_name:
          type: array
          items:
            type: string
    PermissionDenied:
      type: object
      properties:
        detail:
          description: 'Описание ошибки'
          example: "У вас недостаточно прав для выполнения данного действия."
          type: string
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
        - username
        - password
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
        - username
        - password
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
      required:
        - refresh
    TokenCreate:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string